q()
sfsBKN <- exp(scan("BKN.sfs"))
getwd()
sfsBKN <- exp(scan("../SFS/BKN.sfs"))
sfsBKN
seq(0,41,2)
seq(1,40,2)
seq(1,41,2)
sfsBKN <- sfsBKN[seq(1,41,2)] # treat as sample from haploid
sfsBKN
sfsBKNdadi <- matrix(nrow=2,ncol=1)
sfsBKNdadi[1,1] <- paste(length(sfsBKN), "unfolded",sep=" ")
sfsBKNdadi[2,1] <- paste(sfsBKN,collapse=" ")
sfsBKNdadi
write.table(sfsBKNdadi,file="sfsBKN.dadi",quote=F,row.names=F,col.names=F)
dir()
write.table(sfsBKNdadi,file="../SFS/sfsBKN.dadi",quote=F,row.names=F,col.names=F)
sfsTIL <- exp(scan("../SFS/TIL.sfs"))
sfsTIL
sfsTIL <- sfsTIL[seq(1,length(sfsTIL),2)] # treat as sample from haploid
sfsTIL
sfsTILdadi <- matrix(nrow=2,ncol=1)
sfsTILdadi[1,1] <- paste(length(sfsTIL), "unfolded",sep=" ")
sfsTILdadi[2,1] <- paste(sfsTIL,collapse=" ")
write.table(sfsTILdadi,file="../SFS/sfsTIL.dadi",quote=F,row.names=F,col.names=F)
sfsBKN <- exp(scan("../SFS/BKN.sfs"))*10000000 #we calculated 10 MB of DNA
sfsBKN <- sfsBKN[seq(1,length(sfsBKN),2)] # treat as sample from haploid
sfsBKNdadi <- matrix(nrow=2,ncol=1)
sfsBKNdadi[1,1] <- paste(length(sfsBKN), "unfolded",sep=" ")
sfsBKNdadi[2,1] <- paste(sfsBKN,collapse=" ")
write.table(sfsBKNdadi,file="../SFS/sfsBKN.dadi",quote=F,row.names=F,col.names=F)

sfsTIL <- exp(scan("../SFS/TIL.sfs"))*10000000 #we calculated 10 MB of DNA
sfsTIL <- sfsTIL[seq(1,length(sfsTIL),2)] # treat as sample from haploid
sfsTILdadi <- matrix(nrow=2,ncol=1)
sfsTILdadi[1,1] <- paste(length(sfsTIL), "unfolded",sep=" ")
sfsTILdadi[2,1] <- paste(sfsTIL,collapse=" ")
write.table(sfsTILdadi,file="../SFS/sfsTIL.dadi",quote=F,row.names=F,col.names=F)

sfs <- exp(read.table("2dsfs.BKN.TIL.sfs"))*10000000 #we calculated 10 MB of DNA
sfs <- exp(read.table("../SFS/2dsfs.BKN.TIL.sfs"))*10000000 #we calculated 10 MB of DNA
sfs
dim(sfs)
sfs <- sfs[seq(1,nrow(sfs),2),seq(1,ncol(sfs),2)]
sfs
dim(sfs)
n1=nrow(sfs);
n2=ncol(sfs);
ns=paste(n1,n2,collapse=' ');
ns=paste(ns,"unfolded",collapse=' ');
dadi=NULL;
for(i in 1:n1){
	dadi=c(dadi,as.numeric(sfs[i,]))
}

write.table(ns,file="../SFS/2d_BKN_TIL.dadi",col.names=FALSE,row.names=FALSE,quote=FALSE);
write.table(paste(dadi,collapse=' '),file="../SFS/2d_BKN_TIL.dadi",col.names=FALSE,row.names=FALSE,quote=FALSE,append=TRUE);
q()
sfs <- exp(read.table("../SFS/2dsfs.BKN.TIL.sfs"))*10000000 #we calculated 10 MB of DNA
sfs <- sfs[seq(1,nrow(sfs),2),seq(1,ncol(sfs),2)]
sfs
str(sfs)
dim(sfs)
sfs <- exp(read.table("../SFS/2dsfs.BKN.TIL.sfs"))*10000000 #we calculated 10 MB of DNA
sfs
dim(sfs)
nrow(sfs)
sfs[nrow(sfs),ncol(sfs)]
sfs <- sfs[seq(1,nrow(sfs),2),seq(1,ncol(sfs),2)]
sfs[nrow(sfs),ncol(sfs)]
n1=nrow(sfs);
n2=ncol(sfs);
ns=paste(n1,n2,collapse=' ');
ns=paste(ns,"unfolded",collapse=' ');

# Convert 2D sfs to dadi array format
dadi=NULL;
for(i in 1:n1){
	dadi=c(dadi,as.numeric(sfs[i,]))
}

# Write out dadi format to file with same name as 2D sfs file with .fs appeded
write.table(ns,file="../SFS/2d_BKN_TIL.dadi",col.names=FALSE,row.names=FALSE,quote=FALSE);
write.table(paste(dadi,collapse=' '),file="../SFS/2d_BKN_TIL.dadi",col.names=FALSE,row.names=FALSE,quote=FALSE,append=TRUE);
