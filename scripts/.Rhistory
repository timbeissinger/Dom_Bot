?heatmap.2
heatmap.2(sfs2d.mat[2:{nrow(sfs2d.mat)-1},2:{ncol(sfs2d.mat)-1}],Rowv=F,Colv="NA",dendrogram="none",density.info="none",trace="none",col=my_palette, breaks=col_breaks,revC=T,keysize=1)
heatmap.2(sfs2d.mat[2:{nrow(sfs2d.mat)-1},2:{ncol(sfs2d.mat)-1}],Rowv=F,Colv="NA",dendrogram="none",density.info="none",trace="none",col=my_palette, breaks=col_breaks,revC=T,keysize=1, lhei=c(2, 8, 2 ))
heatmap.2(sfs2d.mat[2:{nrow(sfs2d.mat)-1},2:{ncol(sfs2d.mat)-1}],Rowv=F,Colv="NA",dendrogram="none",density.info="none",trace="none",col=my_palette, breaks=col_breaks,revC=T,keysize=1, lhei=c(2, 8 ))
heatmap.2(sfs2d.mat[2:{nrow(sfs2d.mat)-1},2:{ncol(sfs2d.mat)-1}],Rowv=F,Colv="NA",dendrogram="none",density.info="none",trace="none",col=my_palette, breaks=col_breaks,revC=T,keysize=1)
heatmap.2(sfs2d.mat[2:{nrow(sfs2d.mat)-1},2:{ncol(sfs2d.mat)-1}],Rowv=F,Colv="NA",dendrogram="none",density.info="none",trace="none",col=my_palette, breaks=col_breaks,revC=T,keysize=0.5,lmat=rbind( c(0, 3), c(2,1), c(0,4) ), lhei=c(2, 8, 2 ), main="2d sfs for teo & landraces (1-10MB on chr 10)",xlab="No. Teosinte chromosomes with derived allele",ylab="No. Landrace chromosomes with derived allele")
pdf("BKN-TIL-2d-sfs.pdf")
heatmap.2(sfs2d.mat[2:{nrow(sfs2d.mat)-1},2:{ncol(sfs2d.mat)-1}],Rowv=F,Colv="NA",dendrogram="none",density.info="none",trace="none",col=my_palette, breaks=col_breaks,revC=T,keysize=0.5,lmat=rbind( c(0, 3), c(2,1), c(0,4) ), lhei=c(2, 8, 2 ), main="2d sfs for teo & landraces (1-10MB on chr 10)",xlab="No. Teosinte chromosomes with derived allele",ylab="No. Landrace chromosomes with derived allele")
dev.off()
pdf("BKN-TIL-2d-sfs.pdf")
heatmap.2(sfs2d.mat[2:{nrow(sfs2d.mat)-1},2:{ncol(sfs2d.mat)-1}],Rowv=F,Colv="NA",dendrogram="none",density.info="none",trace="none",col=my_palette, breaks=col_breaks,revC=T,keysize=0.5,lmat=rbind( c(0, 3), c(2,1), c(0,4) ), lhei=c(2, 8, 2 ), main="2d sfs for teo & landraces (0-10MB on chr 10)",xlab="No. Teosinte chromosomes with derived allele",ylab="No. Landrace chromosomes with derived allele")
dev.off()
q()
dir()
dir("..")
dir("../SFS")
sfsInb <- exp(scan("../SFS/BKN.sfs"))
sfsNoInb <- exp(scan("../SFS/BKN_no_inb.sfs"))
sfsInb
sfsNoInb
sfsInb - sfsNoInb
sfsInb <- exp(scan("../SFS/BKN.sfs"))
sfsNoInb <- exp(scan("../SFS/BKN_no_inb.sfs"))
sfsInb - sfsNoInb # identical...
barplot(sfsInb)
barplot(sfsInb[-c(0,length(sfsInb)])
barplot(sfsInb[-c(0,length(sfsInb))])
barplot(sfsInb[-c(1,length(sfsInb))])
pdf("BKN.Inbreeding.Correct.pdf")
barplot(sfsInb[-c(1,length(sfsInb))])
dev.off()
barplot(sfsInb[-c(1,length(sfsInb))])
axis(1,1:39)
barplot(sfsInb[-c(1,length(sfsInb))],labels=1:39)
barplot(sfsInb[-c(1,length(sfsInb))],xaxt=1:39)
?barplot
barplot(sfsInb[-c(1,length(sfsInb))],names.arg=1:39)
pdf("BKN.Inbreeding.Correct.pdf")
barplot(sfsInb[-c(1,length(sfsInb))],names.arg=1:39)
dev.off()
pdf("../SFS/BKN.Inbreeding.Correct.pdf")
barplot(sfsInb[-c(1,length(sfsInb))],names.arg=1:39)
dev.off()
q()
setwd("~/Documents/DomesticationBottleneck/Dom_Bot_Git/SFS/")
getwd()
setwd("~/Documents/DomesticationBottleneck/Dom_Bot/SFS/")
getwd()
library(gplots)
sfsBKN <- exp(scan("BKN.sfs"))
sfsTIL <- exp(scan("TIL.sfs"))
sfs2d <- read.table( "2dsfs.BKN.TIL.sfs",header=F,stringsAsFactors=F)
barplot(sfsBKN[2:{length(sfsBKN)-1}],main="Landrace SFS")
barplot(sfsTIL[2:{length(sfsTIL)-1}],main="Teosinte SFS")
sfs2d.mat <- exp(as.matrix(sfs2d))
rownames(sfs2d.mat) <- 0:{nrow(sfs2d.mat)-1}
colnames(sfs2d.mat) <- 0:{ncol(sfs2d.mat)-1}
my_palette <- colorRampPalette(c("blue", "red", "yellow"))(n = 299)
col_breaks = c(seq(0,0.00005,length=100),  # for blue
  seq(0.00005,0.0001,length=100),              # for red
  seq(0.0001,0.001,length=100))              # for yellow

heatmap.2(sfs2d.mat[2:{nrow(sfs2d.mat)-1},2:{ncol(sfs2d.mat)-1}],Rowv=F,Colv="NA",dendrogram="none",density.info="none",trace="none",col=my_palette, breaks=col_breaks,revC=T,keysize=1)
heatmap.2(sfs2d.mat[2:{nrow(sfs2d.mat)-1},2:{ncol(sfs2d.mat)-1}],Rowv=F,Colv="NA",dendrogram="none",density.info="none",trace="none",col=my_palette, breaks=col_breaks,revC=T,keysize=0.5,lmat=rbind( c(0, 3), c(2,1), c(0,4) ), lhei=c(2, 8, 2 ), main="2d sfs for teo & landraces (0-10MB on chr 10)",xlab="No. Teosinte chromosomes with derived allele",ylab="No. Landrace chromosomes with derived allele")
sfsBKN <- exp(scan("BKN.sfs"))*10000000
sfsTIL <- exp(scan("TIL.sfs"))*10000000
sfs2d <- read.table( "2dsfs.BKN.TIL.sfs",header=F,stringsAsFactors=F)*10000000
barplot(sfsBKN[2:{length(sfsBKN)-1}],main="Landrace SFS")
barplot(sfsTIL[2:{length(sfsTIL)-1}],main="Teosinte SFS")
sfs2d.mat <- exp(as.matrix(sfs2d))
rownames(sfs2d.mat) <- 0:{nrow(sfs2d.mat)-1}
colnames(sfs2d.mat) <- 0:{ncol(sfs2d.mat)-1}
my_palette <- colorRampPalette(c("blue", "red", "yellow"))(n = 299)
col_breaks = c(seq(0,0.00005,length=100)*10000000,  # for blue
  seq(0.00005,0.0001,length=100)*10000000,              # for red
  seq(0.0001,0.001,length=100)*10000000)              # for yellow

heatmap.2(sfs2d.mat[2:{nrow(sfs2d.mat)-1},2:{ncol(sfs2d.mat)-1}],Rowv=F,Colv="NA",dendrogram="none",density.info="none",trace="none",col=my_palette, breaks=col_breaks,revC=T,keysize=1)
heatmap.2(sfs2d.mat[2:{nrow(sfs2d.mat)-1},2:{ncol(sfs2d.mat)-1}],Rowv=F,Colv="NA",dendrogram="none",density.info="none",trace="none",col=my_palette, breaks=col_breaks,revC=T,keysize=0.5,lmat=rbind( c(0, 3), c(2,1), c(0,4) ), lhei=c(2, 8, 2 ), main="2d sfs for teo & landraces (0-10MB on chr 10)",xlab="No. Teosinte chromosomes with derived allele",ylab="No. Landrace chromosomes with derived allele")
col <- breaks
col_breaks
nrow(2dsfs.mat)
nrow(sfs2d.mat)
sfs2d <- read.table( "2dsfs.BKN.TIL.sfs",header=F,stringsAsFactors=F)*10000000
sfs2d
hist(sfs2d)
hist(sfs2d.mat)
max(sfs2d.mat)
min(sfs2d.mat)
sfs2d.mat <- exp(as.matrix(sfs2d))
rownames(sfs2d.mat) <- 0:{nrow(sfs2d.mat)-1}
colnames(sfs2d.mat) <- 0:{ncol(sfs2d.mat)-1}
heatmap.2(sfs2d.mat[2:{nrow(sfs2d.mat)-1},2:{ncol(sfs2d.mat)-1}],Rowv=F,Colv="NA",dendrogram="none",density.info="none",trace="none",col=my_palette, breaks=col_breaks,revC=T,keysize=1)
hist(sfs2d.mat)
sfs2d
sfs2d <- read.table( "2dsfs.BKN.TIL.sfs",header=F,stringsAsFactors=F)*10000000
sfs2d.mat <- exp(as.matrix(sfs2d))
rownames(sfs2d.mat) <- 0:{nrow(sfs2d.mat)-1}
colnames(sfs2d.mat) <- 0:{ncol(sfs2d.mat)-1}
heatmap.2(sfs2d.mat[2:{nrow(sfs2d.mat)-1},2:{ncol(sfs2d.mat)-1}],Rowv=F,Colv="NA",dendrogram="none",density.info="none",trace="none",col=my_palette, breaks=col_breaks,revC=T,keysize=1)
sfs2d.mat
sfs2d.mat <- exp(as.matrix(sfs2d))
sfs2d.mat
sfs2d
sfs2d <- exp(read.table( "2dsfs.BKN.TIL.sfs",header=F,stringsAsFactors=F))*10000000
sfs2d
sfs2d.mat <- as.matrix(sfs2d)
sfs2d.mat
rownames(sfs2d.mat) <- 0:{nrow(sfs2d.mat)-1}
colnames(sfs2d.mat) <- 0:{ncol(sfs2d.mat)-1}
heatmap.2(sfs2d.mat[2:{nrow(sfs2d.mat)-1},2:{ncol(sfs2d.mat)-1}],Rowv=F,Colv="NA",dendrogram="none",density.info="none",trace="none",col=my_palette, breaks=col_breaks,revC=T,keysize=1)
heatmap.2(sfs2d.mat[2:{nrow(sfs2d.mat)-1},2:{ncol(sfs2d.mat)-1}],Rowv=F,Colv="NA",dendrogram="none",density.info="none",trace="none",col=my_palette, breaks=col_breaks,revC=T,keysize=0.5,lmat=rbind( c(0, 3), c(2,1), c(0,4) ), lhei=c(2, 8, 2 ), main="2d sfs for teo & landraces (0-10MB on chr 10)",xlab="No. Teosinte chromosomes with derived allele",ylab="No. Landrace chromosomes with derived allele")
sfs2d <- exp(read.table( "2dsfs.TIL.BKN.sfs",header=F,stringsAsFactors=F))*10000000
sfs2d.mat <- as.matrix(sfs2d)
rownames(sfs2d.mat) <- 0:{nrow(sfs2d.mat)-1}
colnames(sfs2d.mat) <- 0:{ncol(sfs2d.mat)-1}
heatmap.2(sfs2d.mat[2:{nrow(sfs2d.mat)-1},2:{ncol(sfs2d.mat)-1}],Rowv=F,Colv="NA",dendrogram="none",density.info="none",trace="none",col=my_palette, breaks=col_breaks,revC=T,keysize=1)
hits(2dsfs.mat)
hist(2dsfs.mat)
hist(sfs2d.mat)

setwd("~/Documents/DomesticationBottleneck/Dom_Bot/SFS/")

library(gplots)

sfsBKN <- exp(scan("BKN.sfs"))*10000000
sfsTIL <- exp(scan("TIL.sfs"))*10000000
sfs2d <- exp(read.table( "2dsfs.TIL.BKN.sfs",header=F,stringsAsFactors=F))*10000000

pdf("SFS_Plots_individual_pops.pdf")
barplot(sfsBKN[2:{length(sfsBKN)-1}],main="Landrace SFS")
barplot(sfsTIL[2:{length(sfsTIL)-1}],main="Teosinte SFS")
dev.off()

sfs2d.mat <- as.matrix(sfs2d)
rownames(sfs2d.mat) <- 0:{nrow(sfs2d.mat)-1}
colnames(sfs2d.mat) <- 0:{ncol(sfs2d.mat)-1}

my_palette <- colorRampPalette(c("blue", "red", "yellow"))(n = 299)

col_breaks = c(seq(0,0.00005,length=100)*10000000,  # for blue
  seq(0.00005,0.0001,length=100)*10000000,              # for red
  seq(0.0001,0.001,length=100)*10000000)              # for yellow

heatmap.2(sfs2d.mat[2:{nrow(sfs2d.mat)-1},2:{ncol(sfs2d.mat)-1}],Rowv=F,Colv="NA",dendrogram="none",density.info="none",trace="none",col=my_palette, breaks=col_breaks,revC=T,keysize=1)

pdf("TIL-BKN-2d-sfs.pdf")
heatmap.2(sfs2d.mat[2:{nrow(sfs2d.mat)-1},2:{ncol(sfs2d.mat)-1}],Rowv=F,Colv="NA",dendrogram="none",density.info="none",trace="none",col=my_palette, breaks=col_breaks,revC=T,keysize=0.5,lmat=rbind( c(0, 3), c(2,1), c(0,4) ), lhei=c(2, 8, 2 ), main="2d sfs for teo & landraces (0-10MB on chr 10)",xlab="No. Teosinte chromosomes with derived allele",ylab="No. Landrace chromosomes with derived allele")
dev.off()

q()

sfs <- exp(read.table("../SFS/2dsfs.TIL.BKN.sfs"))*10000000 #we calculated 10 MB of DNA
sfs <- sfs[seq(1,nrow(sfs),2),seq(1,ncol(sfs),2)]

n1=nrow(sfs);
n2=ncol(sfs);
ns=paste(n1,n2,collapse=' ');
ns=paste(ns,"unfolded",collapse=' ');

dadi=NULL;
for(i in 1:n1){
	dadi=c(dadi,as.numeric(sfs[i,]))
}

write.table(ns,file="../SFS/2d_BKN_TIL.dadi",col.names=FALSE,row.names=FALSE,quote=FALSE);
write.table(paste(dadi,collapse=' '),file="../SFS/2d_BKN_TIL.dadi",col.names=FALSE,row.names=FALSE,quote=FALSE,append=TRUE);


sfsBKN <- exp(scan("../SFS/BKN.sfs"))*10000000 #we calculated 10 MB of DNA
sfsBKN <- sfsBKN[seq(1,length(sfsBKN),2)] # treat as sample from haploid
sfsBKNdadi <- matrix(nrow=2,ncol=1)
sfsBKNdadi[1,1] <- paste(length(sfsBKN), "unfolded",sep=" ")
sfsBKNdadi[2,1] <- paste(sfsBKN,collapse=" ")
write.table(sfsBKNdadi,file="../SFS/sfsBKN.dadi",quote=F,row.names=F,col.names=F)

sfsTIL <- exp(scan("../SFS/TIL.sfs"))*10000000 #we calculated 10 MB of DNA
sfsTIL <- sfsTIL[seq(1,length(sfsTIL),2)] # treat as sample from haploid
sfsTILdadi <- matrix(nrow=2,ncol=1)
sfsTILdadi[1,1] <- paste(length(sfsTIL), "unfolded",sep=" ")
sfsTILdadi[2,1] <- paste(sfsTIL,collapse=" ")
write.table(sfsTILdadi,file="../SFS/sfsTIL.dadi",quote=F,row.names=F,col.names=F)


sfs <- exp(read.table("../SFS/2dsfs.TIL.BKN.sfs"))*10000000 #we calculated 10 MB of DNA
sfs <- sfs[seq(1,nrow(sfs),2),seq(1,ncol(sfs),2)]

n1=nrow(sfs);
n2=ncol(sfs);
ns=paste(n1,n2,collapse=' ');
ns=paste(ns,"unfolded",collapse=' ');

dadi=NULL;
for(i in 1:n1){
	dadi=c(dadi,as.numeric(sfs[i,]))
}

write.table(ns,file="../SFS/2d_BKN_TIL.dadi",col.names=FALSE,row.names=FALSE,quote=FALSE);
write.table(paste(dadi,collapse=' '),file="../SFS/2d_BKN_TIL.dadi",col.names=FALSE,row.names=FALSE,quote=FALSE,append=TRUE);


sfs <- exp(read.table("../SFS/2dsfs.TIL.BKN.sfs"))*10000000 #we calculated 10 MB of DNA
sfs <- sfs[seq(1,nrow(sfs),2),seq(1,ncol(sfs),2)]

n1=nrow(sfs);
n2=ncol(sfs);
ns=paste(n1,n2,collapse=' ');
ns=paste(ns,"unfolded",collapse=' ');

dadi=NULL;
for(i in 1:n1){
	dadi=c(dadi,as.numeric(sfs[i,]))
}

write.table(ns,file="../SFS/2d_TIL_BKN.dadi",col.names=FALSE,row.names=FALSE,quote=FALSE);
write.table(paste(dadi,collapse=' '),file="../SFS/2d_TIL_BKN.dadi",col.names=FALSE,row.names=FALSE,quote=FALSE,append=TRUE);


q()
setwd("~/Documents/DomesticationBottleneck/Dom_Bot/SFS/")
sfsBKN <- exp(scan("BKN.sfs"))*10000000
sfsTIL <- exp(scan("TIL.sfs"))*10000000

sfsBKN <- exp(scan("BKN.sfs"))*10000000
sfsBKN <- exp(scan("BKN.sfs"))*10000000
sfsTIL <- exp(scan("TIL.sfs"))*10000000
barplot(sfsBKN[2:{length(sfsBKN)-1}],main="Landrace SFS")
barplot(sfsTIL[2:{length(sfsTIL)-1}],main="Teosinte SFS")
pdf("SFS_Plots_individual_pops.pdf")
barplot(sfsBKN[2:{length(sfsBKN)-1}],main="Landrace SFS")
barplot(sfsTIL[2:{length(sfsTIL)-1}],main="Teosinte SFS")
dev.off()

q()
setwd("~/Documents/DomesticationBottleneck/Dom_Bot/SFS/")
sfsBKN_intergenic<- exp(scan("BKN_intergenic.sfs"))*10000000
dir()
sfsBKN_intergenic<- exp(scan("BKN_intergenic_10.sfs"))*10000000
sfsTIL_intergenic<- exp(scan("TIL_intergenic_10.sfs"))*10000000
pdf("SFS_Plots_individual_pops_intergenic_10.pdf")
barplot(sfsBKN_intergenic[2:{length(sfsBKN_intergenic)-1}],main="Landrace SFS")
barplot(sfsTIL_intergenic[2:{length(sfsTIL_intergenic)-1}],main="Teosinte SFS")
dev.off()

sfsBKN <- exp(scan("BKN.sfs"))*10000000
sfsTIL <- exp(scan("TIL.sfs"))*10000000
sfs2d <- exp(read.table( "2dsfs.TIL.BKN.sfs",header=F,stringsAsFactors=F))*10000000

sfsBKN_intergenic<- exp(scan("BKN_intergenic_10.sfs"))*10000000
sfsTIL_intergenic<- exp(scan("TIL_intergenic_10.sfs"))*10000000


pdf("SFS_Plots_individual_pops.pdf")
barplot(sfsBKN[2:{length(sfsBKN)-1}],main="Landrace SFS (First 10 Mb on chr. 10)")
barplot(sfsTIL[2:{length(sfsTIL)-1}],main="Teosinte SFS (First 10 Mb on chr. 10)")
dev.off()

pdf("SFS_Plots_individual_pops_intergenic_10.pdf")
barplot(sfsBKN_intergenic[2:{length(sfsBKN_intergenic)-1}],main="Landrace SFS (All of chr. 10 non-genic)")
barplot(sfsTIL_intergenic[2:{length(sfsTIL_intergenic)-1}],main="Teosinte SFS (All of chr. 10 non-genic)")
dev.off()

q()
setwd("~/Documents/DomesticationBottleneck/Dom_Bot/SFS/")
sfsBKN <- exp(scan("BKN.sfs"))
sfsTIL <- exp(scan("TIL.sfs"))
sfs2d <- exp(read.table( "2dsfs.TIL.BKN.sfs",header=F,stringsAsFactors=F))

sfsBKN_intergenic<- exp(scan("BKN_intergenic_10.sfs"))
sfsTIL_intergenic<- exp(scan("TIL_intergenic_10.sfs"))


pdf("SFS_Plots_individual_pops.pdf")
barplot(sfsBKN[2:{length(sfsBKN)-1}],main="Landrace SFS (First 10 Mb on chr. 10)")
barplot(sfsTIL[2:{length(sfsTIL)-1}],main="Teosinte SFS (First 10 Mb on chr. 10)")
dev.off()

pdf("SFS_Plots_individual_pops_intergenic_10.pdf")
barplot(sfsBKN_intergenic[2:{length(sfsBKN_intergenic)-1}],main="Landrace SFS (All of chr. 10 non-genic)")
barplot(sfsTIL_intergenic[2:{length(sfsTIL_intergenic)-1}],main="Teosinte SFS (All of chr. 10 non-genic)")
dev.off()

q()
setwd("~/Documents/DomesticationBottleneck/Dom_Bot/SFS/")
sfsBKN_genic<- exp(scan("BKN_genic_10.sfs"))
sfsTIL_genic<- exp(scan("TIL_genic_10.sfs"))
pdf("SFS_Plots_individual_pops_genic_10.pdf")
barplot(sfsBKN_genic[2:{length(sfsBKN_genic)-1}],main="Landrace SFS (All of chr. 10 genic)")
barplot(sfsTIL_genic[2:{length(sfsTIL_genic)-1}],main="Teosinte SFS (All of chr. 10 genic)")
dev.off()

sfsBKN_comp_10 <- cbind(sfsBKN_intergenic,sfsBKN_intergenic)
sfsBKN_intergenic<- exp(scan("BKN_intergenic_10.sfs"))
sfsTIL_intergenic<- exp(scan("TIL_intergenic_10.sfs"))

sfsBKN_comp_10 <- cbind(sfsBKN_intergenic,sfsBKN_intergenic)
barplot(sfsBKN_comp_10)
sfsBKN_comp_10 <- rbind(sfsBKN_intergenic,sfsBKN_intergenic)
barplot(sfsBKN_comp_10)
barplot(sfsBKN_comp_10[,2:{ncol(sfs_BKN_comp_10)-1}])
barplot(sfsBKN_comp_10[,2:{ncol(sfsBKN_comp_10)-1}])
barplot(sfsBKN_comp_10[,2:{ncol(sfsBKN_comp_10)-1}],beside=T)
sfsBKN_comp_10 <- rbind(sfsBKN_genic,sfsBKN_intergenic)
barplot(sfsBKN_comp_10[,2:{ncol(sfsBKN_comp_10)-1}],beside=T)
sfsBKN_comp_10 <- rbind(sfsBKN_genic,sfsBKN_intergenic)[,seq(2,16,2)]
barplot(sfsBKN_comp_10[,2:{ncol(sfsBKN_comp_10)-1}],beside=T)
sfsBKN_comp_10 <- rbind(sfsBKN_genic,sfsBKN_intergenic)[,seq(1,15,2)]
barplot(sfsBKN_comp_10[,2:{ncol(sfsBKN_comp_10)-1}],beside=T)
sfsBKN_comp_10 <- rbind(sfsBKN_genic,sfsBKN_intergenic)[,]
sfsBKN_comp_10
sfsBKN_comp_10 <- rbind(sfsBKN_genic,sfsBKN_intergenic)[,seq(1,47,2)]
barplot(sfsBKN_comp_10[,2:{ncol(sfsBKN_comp_10)-1}],beside=T)
barplot(sfsBKN_comp_10[,2:{ncol(sfsBKN_comp_10)-1}],beside=T,col=c("red","blue"))
axis(1,1:15)
sfsBKN_genic
names(sfsBKN_comp_10) <- 0:47
barplot(sfsBKN_comp_10[,2:{ncol(sfsBKN_comp_10)-1}],beside=T,col=c("red","blue"))
sfsBKN_comp_10
colnames(sfsBKN_comp_10) <- 0:47
colnames(sfsBKN_comp_10)
ncol(sfs_BKN_comp_10)
ncol(sfsBKN_comp_10)
colnames(sfsBKN_comp_10) <- 0:23
barplot(sfsBKN_comp_10[,2:{ncol(sfsBKN_comp_10)-1}],beside=T,col=c("red","blue"))
barplot(sfsBKN_comp_10[,2:{ncol(sfsBKN_comp_10)-1}],beside=T,col=c("red","blue"),
        main="Landrace chromosome 10 sfs",xlab="No. of Haplotypes containing derived
        allele", ylab="Proportion")
barplot(sfsBKN_comp_10[,2:{ncol(sfsBKN_comp_10)-1}],beside=T,col=c("red","blue"),
        main="Landrace chromosome 10 sfs",xlab="No. of Haplotypes containing derived allele", ylab="Proportion")


barplot(sfsBKN_comp_10[,2:{ncol(sfsBKN_comp_10)-1}],beside=T,col=c("red","blue"),
        main="Landrace chromosome 10 sfs",
        xlab="No. of Haplotypes containing derived allele", ylab="Proportion")

legend("topright","(x,y)",col=c("red","blue"),pch=15,c("genic sequences",
                                                  "intergenic sequences"))

length(sfsTIL_genic)
sfsBKN_comp_10 <- rbind(sfsBKN_genic,sfsBKN_intergenic)[,seq(1,47,2)]
colnames(sfsBKN_comp_10) <- 0:23
sfsTIL_comp_10 <- rbind(sfsTIL_genic,sfsTIL_intergenic)[,seq(1,31,2)]
colnames(sfsBKN_comp_10) <- 0:15

pdf("BKN_compare.pdf")
barplot(sfsBKN_comp_10[,2:{ncol(sfsBKN_comp_10)-1}],beside=T,col=c("red","blue"),
        main="Landrace chromosome 10 sfs",
        xlab="No. of Haplotypes containing derived allele", ylab="Proportion")
legend("topright","(x,y)",col=c("red","blue"),pch=15,c("genic sequences",
                                                  "intergenic sequences"))
barplot(sfsTIL_comp_10[,2:{ncol(sfsTIL_comp_10)-1}],beside=T,col=c("red","blue"),
        main="Teosinte chromosome 10 sfs",
        xlab="No. of Haplotypes containing derived allele", ylab="Proportion")
legend("topright","(x,y)",col=c("red","blue"),pch=15,c("genic sequences",
                                                  "intergenic sequences"))
dev.off()

sfsTIL_comp_10 <- rbind(sfsTIL_genic,sfsTIL_intergenic)[,seq(1,31,2)]
colnames(sfsBKN_comp_10) <- 0:15
colnames(sfsTIL_comp_10) <- 0:15
sfsBKN_comp_10 <- rbind(sfsBKN_genic,sfsBKN_intergenic)[,seq(1,47,2)]
colnames(sfsBKN_comp_10) <- 0:23
sfsTIL_comp_10 <- rbind(sfsTIL_genic,sfsTIL_intergenic)[,seq(1,31,2)]
colnames(sfsTIL_comp_10) <- 0:15

pdf("SFS_compare_10.pdf")
barplot(sfsBKN_comp_10[,2:{ncol(sfsBKN_comp_10)-1}],beside=T,col=c("red","blue"),
        main="Landrace chromosome 10 sfs",
        xlab="No. of Haplotypes containing derived allele", ylab="Proportion")
legend("topright","(x,y)",col=c("red","blue"),pch=15,c("genic sequences",
                                                  "intergenic sequences"))
barplot(sfsTIL_comp_10[,2:{ncol(sfsTIL_comp_10)-1}],beside=T,col=c("red","blue"),
        main="Teosinte chromosome 10 sfs",
        xlab="No. of Haplotypes containing derived allele", ylab="Proportion")
legend("topright","(x,y)",col=c("red","blue"),pch=15,c("genic sequences",
                                                  "intergenic sequences"))
dev.off()

sfsBKN_comp_10 <- rbind(sfsBKN_genic,sfsBKN_intergenic)[,seq(1,47,2)]
colnames(sfsBKN_comp_10) <- 0:23
sfsTIL_comp_10 <- rbind(sfsTIL_genic,sfsTIL_intergenic)[,seq(1,31,2)]
colnames(sfsTIL_comp_10) <- 0:15

pdf("SFS_compare_10.pdf")
barplot(sfsBKN_comp_10[,2:{ncol(sfsBKN_comp_10)-1}],beside=T,col=c("red","blue"),
        main="Landrace chromosome 10 sfs",
        xlab="No. of Haplotypes containing derived allele", ylab="Proportion")
legend("topright","(x,y)",col=c("red","blue"),pch=15,c("Genic sequences",
                                                  "Non-genic sequences"))
barplot(sfsTIL_comp_10[,2:{ncol(sfsTIL_comp_10)-1}],beside=T,col=c("red","blue"),
        main="Teosinte chromosome 10 sfs",
        xlab="No. of Haplotypes containing derived allele", ylab="Proportion")
legend("topright","(x,y)",col=c("red","blue"),pch=15,c("Genic sequences",
                                                  "Non-genic sequences"))
dev.off()
barplot(sfsBKN_comp_10,beside=T,col=c("red","blue"),
        main="Landrace chromosome 10 sfs",
        xlab="No. of Haplotypes containing derived allele", ylab="Proportion")

barplot(sfsTIL_comp_10,beside=T,col=c("red","blue"),
        main="Teosinte chromosome 10 sfs",
        xlab="No. of Haplotypes containing derived allele", ylab="Proportion")
q()
BKNintergenic <- read.table("../THETAS/BKN_intergenic_10_windows.thetas.gz.pestPG",header=T,stringsAsFactors=F,comment.char="",skip=1)
BKNintergenicCovered <- BKNintergenic[which(BKNintergenic$nSites>500),]
plot(BKNintergenicCovered$WinCenter,BKNintergenicCovered$Tajima)
nrow(BKNintergenicCovered)
BKNgenic <- read.table("../THETAS/BKN_genic_10_windows.thetas.gz.pestPG",header=T,stringsAsFactors=F,comment.char="",skip=1)
BKNgenicCovered <- BKNgenic[which(BKNgenic$nSites>500),]
nrow(BKNgenicCovered)
fix(BKNintergenic)
which(BKNgenic$nSites==0)
which(BKNgenic$nSites==0)[1:100]
which(BKNintergenic$nSites==0)[1:100]
fix(BKNgenic)
BKNgenic$WinCenter[1:10]
BKNintergenic$WinCenter[1:10]
plot(BKNgenic$WinCenter)
plot(BKNgenic$WinCenter[1:1000])
plot(BKNgenic$WinCenter[1:100])
plot(BKNgenic$WinCenter[1:10000])
plot(BKNgenic$WinCenter[1:10000],type="l")
plot(BKNgenic$WinCenter[1:100000],type="l")
plot(BKNintergenic$WinCenter[1:100000],type="l")
BKNintergenic$WinCenter[1:100]
BKNintergenic$WinCenter[1:1000]
nrow(BKNintergenic)
nrow(BKNgenic)
mean(BKNintergenicCovered$Tajima)
BKNgenicCovered <- BKNgenic[which(BKNgenic$nSites>100),]
BKNintergenicCovered <- BKNintergenic[which(BKNintergenic$nSites>100),]
nrow(BKNgenicCovered)
nrow(BKNintergenicCovered)
TILgenicCovered <- TILgenic[which(TILgenic$nSites>100),]
plot(BKNintergenicCovered$WinCenter,BKNintergenicCovered$Tajima)
plot(BKNintergenicCovered$WinCenter,BKNintergenicCovered$Tajima)
mean(BKNintergenicCovered$Tajima)
mean(BKNgenicCovered$Tajima)
hist(BKNintergenicCovered$Tajima)
hist(BKNgenicCovered$Tajima)
hist(TILgenicCovered$Tajima)
plot(BKNgenicCovered$WinCenter[1:100])
points(BKNintergenicCovered$WinCenter[1:100],col="red")
plot(BKNgenicCovered$WinCenter[1:1000])
points(BKNintergenicCovered$WinCenter[1:1000],col="red")
plot(BKNgenicCovered$WinCenter[1:1000],BKNgenicCovered$WinCenter[1:1000])
plot(BKNintergenicCovered$WinCenter[1:1000],BKNintergenicCovered$WinCenter[1:1000])
plot(BKNgenicCovered$WinCenter[1:1000],BKNgenicCovered$WinCenter[1:1000])
points(BKNgenicCovered$WinCenter[1:1000],BKNgenicCovered$WinCenter[1:1000],col="red")
plot(BKNgenicCovered$WinCenter[1:1000],BKNgenicCovered$WinCenter[1:1000])
plot(BKNintergenicCovered$WinCenter[1:1000],BKNintergenicCovered$WinCenter[1:1000],col="red")
plot(BKNgenicCovered$WinCenter[1:1000],BKNgenicCovered$WinCenter[1:1000])
points(BKNgenicCovered$WinCenter[1:1000],BKNgenicCovered$WinCenter[1:1000])
plot(BKNgenicCovered$WinCenter[1:1000],BKNgenicCovered$WinCenter[1:10000])
plot(BKNgenicCovered$WinCenter[1:10000],BKNgenicCovered$WinCenter[1:10000])
plot(BKNintergenicCovered$WinCenter[1:10000],BKNintergenicCovered$WinCenter[1:10000],col="red")
plot(BKNgenicCovered$WinCenter[1:100],BKNgenicCovered$WinCenter[1:100])
plot(BKNintergenicCovered$WinCenter[1:100],BKNintergenicCovered$WinCenter[1:100],col="red")
plot(BKNintergenicCovered$WinCenter[1:100],BKNintergenicCovered$WinCenter[1:100],col="red")
points(BKNgenicCovered$WinCenter[1:100],BKNgenicCovered$WinCenter[1:100])
BKNgenicCovered <- BKNgenic[which(BKNgenic$nSites>0),]
BKNintergenicCovered <- BKNintergenic[which(BKNintergenic$nSites>0),]
plot(BKNintergenicCovered$WinCenter[1:100],BKNintergenicCovered$WinCenter[1:100],col="red")
points(BKNgenicCovered$WinCenter[1:100],BKNgenicCovered$WinCenter[1:100])
plot(BKNintergenicCovered$WinCenter[1:1000],BKNintergenicCovered$WinCenter[1:1000],col="red")
points(BKNgenicCovered$WinCenter[1:100],BKNgenicCovered$WinCenter[1:100])
plot(BKNintergenicCovered$WinCenter[1:500],BKNintergenicCovered$WinCenter[1:500],col="red")
points(BKNgenicCovered$WinCenter[1:100],BKNgenicCovered$WinCenter[1:100])
plot(BKNintergenicCovered$WinCenter[1:200],BKNintergenicCovered$WinCenter[1:200],col="red")
points(BKNgenicCovered$WinCenter[1:100],BKNgenicCovered$WinCenter[1:100])
plot(BKNintergenicCovered$WinCenter[1:200],BKNintergenicCovered$WinCenter[1:200],col="red")
points(BKNgenicCovered$WinCenter[1:100],BKNgenicCovered$WinCenter[1:100])
points(BKNgenicCovered$WinCenter[1:500],BKNgenicCovered$WinCenter[1:500])
points(BKNgenicCovered$WinCenter[1:300],BKNgenicCovered$WinCenter[1:300])
plot(BKNintergenicCovered$WinCenter[1:400],BKNintergenicCovered$WinCenter[1:400],col="red")
points(BKNgenicCovered$WinCenter[1:300],BKNgenicCovered$WinCenter[1:300])
plot(BKNintergenicCovered$WinCenter[1:400],BKNintergenicCovered$WinCenter[1:400],col="red")
points(BKNgenicCovered$WinCenter[1:300],BKNgenicCovered$WinCenter[1:300])
which(BKNgenicCovered$WinCenter==BKNintergenicCovered$WinCenter)
BKNgenicCovered <- BKNgenic[which(BKNgenic$nSites>100),]
BKNintergenicCovered <- BKNintergenic[which(BKNintergenic$nSites>100),]
plot(BKNgenicCovered$WinCenter,BKNgenicCovered$Tajima)
mean(BKNintergenicCovered$Tajima)
mean(BKNgenicCovered$Tajima)
BKNgenicCovered <- BKNgenic[which(BKNgenic$nSites>0),]
BKNintergenicCovered <- BKNintergenic[which(BKNintergenic$nSites>0),]
which(BKNgenicCovered$WinCenter==BKNintergenicCovered$WinCenter)
intersect(BKNgenicCovered$WinCenter,BKNintergenicCovered$WinCenter)
BKNgenicCovered$WinCenter %in% BKNintergenicCovered$WinCenter
which(BKNgenicCovered$WinCenter %in% BKNintergenicCovered$WinCenter)
TILgenic <- read.table("../THETAS/TIL_genic_10_windows.thetas.gz.pestPG",header=T,stringsAsFactors=F,comment.char="",skip=1)
TILgenicCovered <- TILgenic[which(TILgenic$nSites>0),]
which(BKNgenicCovered$WinCenter %in% TILgenicCovered$WinCenter)
mean(BKNintergenicCovered$Tajima)
mean(BKNgenicCovered$Tajima)
mean(TILgenicCovered$Tajima)
hist(BKNintergenicCovered$Tajima)
hist(BKNgenicCovered$Tajima)
hist(TILgenicCovered$Tajima)
q()
